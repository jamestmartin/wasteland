#
# Groups are collections of permissions which make it easier to assign a set of permissions to a lot of players at once.
# It also makes it easier to define permission hierarchies (e.g. trial mod, mod, head mod, admin),
# through the inheritence mechanism.
#
# However, you are not required to use them and can assign permissions directly to players if you choose.
#
# groups:
#  # The default group will only be assigned to players with no other group assigned.
#  # If you assign a player a group, they will not receive the default permissions,
#  # unless you explicitly unclude them as a member of this group.
#  default:
#    permission.for.newbies: true  # track a player's permission
#  <groupName>:
#    # Permissions in later groups take precedent over permissions in earlier groups,
#    # e.g. if `first-group` disables `foo.bar` and `some-other-group` disables it, `foo.bar` will be disabled.
#    inherits:
#    - first-group
#    - some-other-group
#    permissions:
#      my.permission: true
#      some.bad.permission: false    # disable a permission that was enabled by default
#      shared.top.level.node:
#        a.b: true                   # same as: `shared.top.lavel.node.a.b: true`
#        c.d: true
#
# players:
#   # You *must* use player UUIDs, not player names, because player names are not guaranteed to be unique across sessions.
#   # You can see a player's UUID in the server log when they join, or look it up online.
#   # I would recommend including the player's name as a comment to help you remember whose UUID this is.
#   <player-uuid>:
#     permissions:
#     - permission.just.for.me: true
#     groups:
#     - my-group
#     - some-other-group
#

groups: {}

players: {}